/**
 *
 * Front
 *
 *
 */


/* Styles
================================================================================================================== */

.frontpage {

  /* Top display */
  &--top {
    color: $white;
    height: 24em;
    position: relative;

    @include breakpoint($breakpoint-desk) {
      height: 30em;
    }

    &-image {
      overflow: hidden;
      position: absolute;
      height: 100%;
      width: 100%;

      // Meh... nested image styling
      img {
        height: 24em;
        min-width: 2000px;
        width: 100%;

        @extend %top-image-center;

        @include breakpoint($breakpoint-desk) {
          height: 30em;
        }
      }
    }

    &-gradient {
      @extend %gradient;

      // Override the default gradient for frontpage.
      @include background-image(linear-gradient(transparent, transparentize($black, .6) 40%, transparentize($black, .5) 60%));
    }

    // Content positioned centered + height of header.
    &-content-wrapper {
      text-align: center;
      left: 0;
      right: 0;
      padding-right: $padding-mobile;
      padding-left: $padding-mobile;
      max-width: $layout-max-width-desk;
      position: absolute;
      top: 50%;
      z-index: 6; // Content on top of image.

      @include transform(translateY(-50%));

      // Make room for sidebar on small devices.
      @include breakpoint($breakpoint-lap) {
        padding-left: 4.4em + $padding-mobile;
        margin: 0 auto;
        width: 100%;
        box-sizing: border-box;
      }

      // Broader sidebar.
      @include breakpoint($breakpoint-desk) {
        font-size: 1.2em;
        left: 0;
        right: 0;
        padding-left: $left-spacing;
        padding-top: 4.25em;
      }
    }

    // The title text.
    &-header {
      margin-bottom: .25em;

      line-height: 1.25em;

      @include breakpoint($breakpoint-tablet) {
        font-size: 3.2em;
      }

      a {
        @include strip-link-styles($white)
      }
    }

    // A short description.
    &-lead {
      margin-bottom: 1.6em;
    }

    // Button/link for top news.
    &-read-more {
      max-width: 20em;
      margin: 0 auto;

      a {
        width: 100%;
        box-sizing: border-box;
        background: transparentize($black, .7);
        border: 2px solid;
        display: inline-block;
        padding: .5em 3em;
        font-size: 1.2em;

        @include strip-link-styles($white);
        @include border-radius(.7em);

        &:before {
          content: url("../templates/images/link-arrow.svg") no-repeat center left;
          padding-right: .5em;
          vertical-align: middle;
        }
      }
    }
  }

  /* Box list display */

  &--box-list {
    // Center content.
    @extend %auto-margins;

    padding: 1em;

    @include breakpoint($breakpoint-lap) {
      padding-left: $layout-left-spacing - 1em; // No extra padding and small burger menu.
      max-width: $layout-max-width;
      padding-right: 1em;
      padding-bottom: 1em;
      padding-top: 1em;
    }

    @include breakpoint($breakpoint-desk) {
      padding-left: $layout-left-spacing + 1em; // Default menu width.
    }

    &-header {
      margin-bottom: .5em;
      font-size: 200%;

      @media only screen and (min-width: $breakpoint-tablet) {
        padding: 0.4em 0;
      }
    }

    &--wrapper:nth-child(odd) {
      background-color: $zebra-gray;
    }

    .itk-boxlist--item {
      @include breakpoint($breakpoint-tablet) {
        background-color: $white;
      }
    }

  }

  /* More links */

  &--more-link {
    text-align: center;
    padding: 2em;
  }

  &--more-button {
    @include border-radius(0.5em);
    background-color: $blue-dark;
    display: inline-block;

    a {
      display: inline-block;
      text-align: center;
      color: $white;
      padding: 0.5em 2em 0.5em 3em;
      margin-left: -3.2em;

      @include border-radius(0.5em);

      @include strip-link-styles($white);
    }

    // Center the icon.
    svg {
      height: 1.4em;
      width: 3em;
      margin-bottom: -0.3em;

      // Default icon color.
      path, rect {
        fill: $white;
      }
    }

  }

}