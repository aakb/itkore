<?php

use Drupal\file\Entity\File;
use Drupal\Core\Config;

/**
 * Implements hook_preprocess_node().
 *
 * Calls node type specific preprocess functions, e.g. "dokk_preprocess_node_event" for nodes of type event.
 *
 */

function itkore_preprocess_node(&$variables) {
  // Setup specific preprocess functions based on node type.
  $function = __FUNCTION__ . '_'. $variables['node']->getType();

  // Call function.
  if (function_exists($function)) {
    $function($variables);
  }
}

/**
 * Implements hook_preprocess_node__type().
 */
function itkore_preprocess_node_event(&$variables) {
  // Set timezone UTC to properly create format.
  $DateTimeZoneUTC = new DateTimeZone('UTC');

  // Create start and end time php object.
  $startDateTime = DateTime::CreateFromFormat('Y-m-d\TH:i:s', $variables['node']->field_starttime->value, $DateTimeZoneUTC);
  $endDateTime = DateTime::CreateFromFormat('Y-m-d\TH:i:s', $variables['node']->field_endtime->value, $DateTimeZoneUTC);

  // Set time and date based on object in timestamp format.
  $variables['eventdate'] = \Drupal::service('date.formatter')->format(date('U', $startDateTime->getTimestamp()), 'custom', 'l j. F Y');
  $variables['eventstarttime'] = \Drupal::service('date.formatter')->format(date('U', $startDateTime->getTimestamp()), 'custom', 'G:i');
  $variables['eventendtime'] = \Drupal::service('date.formatter')->format(date('U', $endDateTime->getTimestamp()), 'custom', 'G:i');

}


/**
 * Implements hook_preprocess_field().
 *
 * Enable preprocess function for specific fields.
 */
function itkore_preprocess_field(&$variables) {
  $function = __FUNCTION__ . '__' . $variables['element']['#field_name'];

  if (function_exists($function)) {
    $function($variables);
  }
}

/**
 * Implements hook_preprocess_field__().
 *
 * Enable preprocess function for specific fields.
 */
function itkore_preprocess_field__field_iframe(&$variables) {
  $variables['unformatted_iframe'] = strip_tags($variables['items']['0']['content']['#context']['value'], '<iframe>');
}


/**
 * Implements hook_preprocess_node().
 *
 * Calls node type specific preprocess functions, e.g. "dokk_preprocess_node_event" for nodes of type event.
 *
 */
function itkore_preprocess_menu(&$variables) {
  $variables['hamburger_menu'] = FALSE;
  // The only way to identify which region is rendering the menu block is to check for expanded (Main nav does not have any children and neither item is expanded.)
  // This won't work if for some reason none of the menu items have any children,
  foreach ($variables['items'] as $item) {
    if($item['is_expanded'] == TRUE) {
      $variables['hamburger_menu'] = TRUE;
    }
  }
}
